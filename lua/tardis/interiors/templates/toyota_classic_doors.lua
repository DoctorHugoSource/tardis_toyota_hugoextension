local fallback_open = -400
local fallback_close = -286

TARDIS:AddInteriorTemplate("toyota_classic_doors", {
	EnableClassicDoors = true,
	Interior = {
		Portal = {
			-- Generated by portals debug tool
			pos = Vector(-404.5, 0, 144),
			ang = Angle(-0, 0, 0),
			width = 120,
			height = 99,
		},
		Fallback={
			pos=Vector(fallback_close,0,100),
			ang=Angle(0,0,0)
		},
		Lamps = {
			entry = {
				--pos = Vector(-407.8, 0, 152.63),
				distance = 200,
				brightness = 0.05,
				fov = 135,

				pos = Vector(-255.5, 0, 166),
				ang = Angle(15, -180, 135),

			},
		},
		Parts = {
			intdoor = {
				model="models/cem/toyota/doors.mdl",
				pos=Vector(-311.302, 0, 93.0748),
				ang=Angle(0,0,0),
			},
			toyota_entry = false,
			toyota_entry_alt = {pos = Vector(0,0,0), ang = Angle(0, 90, 0), },
			toyota_doorframecover = false,
		},
		Sounds = {
			Door={
				enabled=true,
				open="karmal/toyota/intdoor.wav",
				close="karmal/toyota/intdoor.wav",
			},
		},
		IntDoorAnimationTime = 3,
	},
	CustomHooks = {
		classic_door_init_fallback = {
			inthooks = {
				["PostInitialize"] = true,
			},
			func = function(ext,int,open)
				int.Fallback = TARDIS:CopyTable(int.Fallback)
			end,
		},
		classic_door_handle = {
			exthooks = {
				["ToggleDoorReal"] = true,
			},
			func = function(ext,int,open)
				int.Fallback.pos.x = open and fallback_open or fallback_close

				if SERVER then
					local p1 = int:LocalToWorld(Vector(-305.898, -28.378, 91.021))
					local p2 = int:LocalToWorld(Vector(-401.648, 30.67, 189.103))
					local stuck = ents.FindInBox(p1, p2)

					local plycount = 0
					for i,v in ipairs(stuck) do
						if v:IsPlayer() then
							plycount = plycount + 1
						end
					end

					int:Timer("toyota_doorframe_stuck", 1, function()
						for i,v in ipairs(stuck) do
							if v:IsPlayer() then
								if plycount == 1 then
									local plypos = int:WorldToLocal(v:GetPos())
									v:SetPos(int:LocalToWorld(int.Fallback.pos))
								else
									v:SetPos(v:GetPos() + Vector(fallback_close - fallback_open,0,0))
								end
							end
						end
					end)
				end
			end,
		},
	},
})

